<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.UserDao">

    <!--通过geNumber获取角色-->
    <select id="findRoles" parameterType="String" resultType="String">
        select role
        from user
        where geNumber = #{geNumber} and userState="有效"
    </select>

    <!--通过geNumber获取权限-->
    <select id="findPermissions" parameterType="String" resultType="String">
        select authority
        from user
        where geNumber = #{geNumber} and userState="有效"
    </select>

    <select id="findByGeNumber" parameterType="String" resultType="User">
        select *
        from user
        where geNumber = #{geNumber} and userState="有效"
    </select>

    <!-- 员工列表 -->
    <select id="listUser" parameterType="User" resultType="User">
        SELECT *
        FROM user u
        <where>
            <if test="geNumber!=null and geNumber!=''">
                u.geNumber LIKE #{geNumber}
            </if>
            <if test="geName!=null and geName!=''">
                AND u.geName LIKE #{geName}
            </if>
            <if test="userState!=null and userState!=''">
                AND u.userState=#{userState}
            </if>
            <if test="updateTime!=null and updateTime!=''">
                AND u.updateTime >= #{updateTime}
            </if>
            and u.userState!="删除" and u.role!="admin"
        </where>
        ORDER BY u.updateTime desc
    </select>

    <!-- 关系列表 -->
    <select id="listTeacher" parameterType="Teacher" resultType="Map">
        select user.geName AS stuName,teacher.stuNumber,teacher.tutorNumber ,u.geName tutorName
        from user ,teacher,user u
        <where>
            <if test="stuNumber!=null and stuNumber!=''">
                teacher.stuNumber LIKE #{stuNumber}
            </if>
            <if test="tutorNumber!=null and tutorNumber!=''">
                AND teacher.tutorNumber LIKE #{tutorNumber}
            </if>
            and teacher.state="有效" and user.geNumber = teacher.stuNumber
            and u.geNumber = teacher.tutorNumber
        </where>
    </select>

    <!-- 关系列表 -->
    <select id="getTeacherList" resultType="Map">
        select user.geName AS stuName,teacher.stuNumber,teacher.tutorNumber ,u.geName tutorName,teacher.createTime,teacher.updateTime,teacher.state
        from user ,teacher,user u
        where user.geNumber = teacher.stuNumber and u.geNumber = teacher.tutorNumber
    </select>

    <!--添加用户-->
    <insert id="addUser" parameterType="User" >
        INSERT ignore INTO user(geNumber,geName,password,createTime,updateTime,phone,role,authority,userState,email)
        VALUES(#{geNumber},#{geName},#{password},#{createTime},#{updateTime},#{phone},#{role},#{role},"有效",#{email})
    </insert>

    <!--通过ID获取用户-->
    <select id="getUserById" parameterType="String" resultType="User">
        select distinct *
        from user
        where geNumber = #{geNumber}
    </select>

    <update id="updateUser" parameterType="User">
        update user
        set password=#{password},phone=#{phone},userState=#{userState},updateTime=#{updateTime},email=#{email}
        where geNumber=#{geNumber}
    </update>

    <update id="delUser" parameterType="String">
        update user
        set updateTime=#{updateTime},userState="删除"
        where geNumber=#{geNumber}
    </update>

    <update id="updatePassword" parameterType="String">
        update user
        set password=#{password},updateTime=#{updateTime}
        where geNumber=#{geNumber}
    </update>

    <update id="lockUser">
        update user
        set userState ="无效",updateTime=#{updateTime}
        where id=#{id}
    </update>

    <update id="clearUser">
        update user
        set userState ="有效",updateTime=#{updateTime}
        where id=#{id}
    </update>

    <insert id="insertUserList" parameterType="java.util.List">
        insert ignore into  user(geNumber,geName,password,role,authority,userState,createTime,updateTime,phone,email)
        values 
        <foreach collection="list" item="user" index="index" separator=",">
            (#{user.geNumber},#{user.geName},#{user.password},#{user.role},#{user.role},"有效",#{user.createTime},#{user.updateTime},#{user.phone},#{user.email})
        </foreach>
    </insert>

    <select id="getUserList" resultType="User">
        select * from user
    </select>

    <insert id="insertTeacherList" parameterType="java.util.List">
        insert ignore into  teacher(stuNumber,tutorNumber,state,createTime,updateTime)
        values
        <foreach collection="list" item="user" index="index" separator=",">
            (#{user.stuNumber},#{user.tutorNumber},"有效",#{user.createTime},#{user.updateTime})
        </foreach>
    </insert>

    <select id="getStudentList" resultType="String">
        select geNumber
        from user
        where role="student" and userState="有效"
    </select>

    <insert id="insertReportList" parameterType="java.util.List">
        insert ignore into  report(stuNumber,reportName,reportType,reportState)
        values
        <foreach collection="list" item="report" index="index" separator=",">
            (#{report.stuNumber},#{report.reportName},#{report.reportType},"未上传")
        </foreach>
    </insert>

    <insert id="insertPlanList" parameterType="java.util.List">
        insert ignore into  plan(stuNumber,planName,planType,planState)
        values
        <foreach collection="list" item="plan" index="index" separator=",">
            (#{plan.stuNumber},#{plan.planName},#{plan.planType},"未上传")
        </foreach>
    </insert>
</mapper>